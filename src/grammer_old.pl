
% transition(current_node,next_node,[firstset]).
transition(start,_,[program]).
transition(reptprogram,"struct",[structorimplorfunc,reptprogram]).
transition(reptprogram,"impl",[structorimplorfunc,reptprogram]).
transition(reptprogram,"func",[structorimplorfunc,reptprogram]).
transition(reptprogram,_,[]).
transition(addop,"-",["-"]).
transition(addop,"+",["+"]).
transition(addop,"|",["|"]).
transition(aparms,id,[expr,aparamstail]).
transition(aparms,")",[]).
transition(aparms,"[",[expr,aparamstail]).
transition(aparms,"-",[expr,aparamstail]).
transition(aparms,"+",[expr,aparamstail]).
transition(aparms,"!",[expr,aparamstail]).
transition(aparms,floatnum,[expr,aparamstail]).
transition(aparms,intnum,[expr,aparamstail]).
transition(aparamstail,",",[",",expr]).
transition(arithexpr,id,[term,rightrecarithexpr]).
transition(arithexpr,"(",[term,rightrecarithexpr]).
transition(arithexpr,"-",[term,rightrecarithexpr]).
transition(arithexpr,"+",[term,rightrecarithexpr]).
transition(arithexpr,"!",[term,rightrecarithexpr]).
transition(arithexpr,floatnum,[term,rightrecarithexpr]).
transition(arithexpr,intnum,[term,rightrecarithexpr]).
transition(arraysize,";",[]).
transition(arraysize,"[",["[",arraysizep,"]"]).
transition(arraysizep,"]",[]).
transition(arraysizep,intnum,[intnum]).
transition(assignop,"=",["="]).
transition(expr,id,[arithexpr,expr2]).
transition(expr,"(",[arithexpr,expr2]).
transition(expr,"+",[arithexpr,expr2]).
transition(expr,"-",[arithexpr,expr2]).
transition(expr,"!",[arithexpr,expr2]).
transition(expr,floatnum,[arithexpr,expr2]).
transition(expr,intnum,[arithexpr,expr2]).
transition(expr2,";",[]).
transition(expr2,")",[]).
transition(expr2,",",[]).
transition(expr2,">=",[relop,arithexpr]).
transition(expr2,"<=",[relop,arithexpr]).
transition(expr2,">",[relop,arithexpr]).
transition(expr2,"<",[relop,arithexpr]).
transition(expr2,"!=",[relop,arithexpr]).
transition(expr2,"==",[relop,arithexpr]).

transition(factor,intnum,[intnum]).
transition(factor,floatnum,[floatnum]).
transition(factor,"!",["!",factor]).
transition(factor,"-",[sign,factor]).
transition(factor,"+",[sign,factor]).
transition(factor,"(",["(",arithexpr,")"]).
transition(factor,id,[idnest,fidnest]).
transition(fidnest,id,[id,fid1]).
transition(fid1,"(",["(",aparams,")"]).
transition(fid1,"[",[indice]).
transition(fparams,id,[id,":",type,arraysize,fparamstail]).
transition(fparams,")",[]).
transition(fparamstail,",",[",",id,":",type,arraysize]).
transition(funcbody,"{",["{",reptfuncbody,"}"]).
transition(reptfuncbody,id,[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"let",[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"while",[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"read",[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"write",[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"if",[vardeclorstat,reptfuncbody]).
transition(reptfuncbody,"}",[]).
transition(funcdecl,"func",[funchead,";"]).
transition(funcdef,"func",[funchead,funcbody]).
transition(funchead,"func",["func",id,"(",fparams,")","->",returntype]).
transition(idnest,id,[id,fid]).
transition(fid,"(",["(",aparams,")","."]).
transition(fid,"[",[indice,"."]).
transition(impldef,"impl",["impl",id,"{",funcdef,"}"]).
transition(indice,"[",["[",arithexpr,"]"]).
transition(memberdecl,"let",[vardecl]).
transition(memberdecl,"func",[funcdecl]).
transition(multop,"&",["&"]).
transition(multop,"/",["/"]).
transition(multop,"*",["*"]).
transition(optstructdecl2,"}",[]).
transition(optstructdecl2,"inherits",["inherits",id,",",id]).
transition(relexpr,id,[arithexpr,relop,arithexpr]).
transition(relexpr,"(",[arithexpr,relop,arithexpr]).
transition(relexpr,"+",[arithexpr,relop,arithexpr]).
transition(relexpr,"-",[arithexpr,relop,arithexpr]).
transition(relexpr,"!",[arithexpr,relop,arithexpr]).
transition(relexpr,intnum,[arithexpr,relop,arithexpr]).
transition(relexpr,floatnum,[arithexpr,relop,arithexpr]).
transition(relop,">=",[">="]).
transition(relop,"<=",["<="]).
transition(relop,">",[">"]).
transition(relop,"<",["<"]).
transition(relop,"!=",["!="]).
transition(relop,"==",["=="]).
transition(returntype,id,[type]).
transition(returntype,"void",["void"]).
transition(returntype,"integer",[type]).
transition(returntype,"float",[type]).
transition(rightrecarithexpr,";",[]).
transition(rightrecarithexpr,")",[]).
transition(rightrecarithexpr,")",[]).
transition(rightrecarithexpr,"+",[addop,term,rightrecarithexpr]).
transition(rightrecarithexpr,"-",[addop,term,rightrecarithexpr]).
transition(rightrecarithexpr,">=",[]).
transition(rightrecarithexpr,"<=",[]).
transition(rightrecarithexpr,">",[]).
transition(rightrecarithexpr,"<",[]).
transition(rightrecarithexpr,"!=",[]).
transition(rightrecarithexpr,"==",[]).
transition(rightrecarithexpr,",",[]).
transition(rightrecarithexpr,"]",[]).
transition(rightrecarithexpr,"|",[addop,term,rightrecarithexpr]).
transition(rightrecterm,")",[]).
transition(rightrecterm,"+",[]).
transition(rightrecterm,"-",[]).
transition(rightrecterm,">=",[]).
transition(rightrecterm,"<=",[]).
transition(rightrecterm,">",[]).
transition(rightrecterm,"<",[]).
transition(rightrecterm,"!=",[]).
transition(rightrecterm,"==",[]).
transition(rightrecterm,",",[]).
transition(rightrecterm,"&",[multop,factor,rightrecterm]).
transition(rightrecterm,"/",[multop,factor,rightrecterm]).
transition(rightrecterm,"*",[multop,factor,rightrecterm]).
transition(rightrecterm,"]",[]).
transition(rightrecterm,"|",[]).
transition(rightrecterm,";",[]).
transition(sign,"-",["-"]).
transition(sign,"+",["+"]).
transition(statblock,id,[statement]).
transition(statblock,";",[]).
transition(statblock,"{",["{",statement,"}"]).
transition(statblock,"return",[statement]).
transition(statblock,"read",[statement]).
transition(statblock,"write",[statement]).
transition(statblock,"while",[statement]).
transition(statblock,"if",[statement]).
transition(statblock,"else",[]).
%transition(statement,id,[idnest,statement2,";"]).
transition(statement,"return",["return","(",expr,")",";"]).
transition(statement,"write",["write","(",expr,")",";"]).
transition(statement,"read",["read","(",variable,")",";"]).
transition(statement,"while",["while","(",relexpr,")",statblock,";"]).
transition(statement,"if",["if","(",relexpr,")","then",statblock,"else",statblock,";"]).
transition(statement,id,[id,statementidnest,";"]).
transition(statementidnest,"(",["(",aparams,")",statementidnest2]).
transition(statementidnest,".",[".",id,statementidnest]).
transition(statementidnest,"[",[indice,reptidnest,statementidnest3]).
transition(statementidnest,"=",[assignop,expr]).
transition(statementidnest2,";",[]).
transition(statementidnest2,".",[".",id,statementidnest]).

transition(statementidnest3,".",[".",id,statementidnest]).
transition(statementidnest3,"=",[assignop,expr]).
transition(reptidnest,"[",[indice,reptidnest]).
transition(reptidnest,".",[]).
transition(reptidnest,"=",[]).

transition(statement2,id,[id,indice,assignop,expr]).
transition(statement2,"(",["(",aparams,")"]).
transition(structdecl,"struct",
	   ["struct",id,optstructdecl2,"{",visibility,memberdecl,"}",";"]).
transition(structorimplorfunc,"struct",[structdecl]).
transition(structorimplorfunc,"impl",[impldef]).
transition(structorimplorfunc,"func",[funcdef]).
transition(term,id,[factor,rightrecterm]).
transition(term,"(",[factor,rightrecterm]).
transition(term,"-",[factor,rightrecterm]).
transition(term,"+",[factor,rightrecterm]).
transition(term,"!",[factor,rightrecterm]).
transition(term,floatnum,[factor,rightrecterm]).
transition(term,intnum,[factor,rightrecterm]).
transition(type,id,[id]).
transition(type,"float",["float"]).
transition(type,"integer",["integer"]).
transition(type,"id",["id"]).
transition(vardecl,"let",["let",id,":",type,arraysize,";"]).
transition(vardeclorstat,id,[statement]).
transition(vardeclorstat,"let",[vardecl]).
transition(vardeclorstat,"return",[statement]).
transition(vardeclorstat,"read",[statement]).
transition(vardeclorstat,"write",[statement]).
transition(vardeclorstat,"while",[statement]).
transition(vardeclorstat,"if",[statement]).
transition(variable,id,[idnest,id,indice]).
transition(visibility,"public",["public"]).
transition(visibility,"private",["private"]).

%nonterminal(Nonterm,First,Follow).
nonterminal(start,["struct","impl","func"],[]).
nonterminal(arraypamstail,[","],[")"]).
nonterminal(arraysizep,[intnum],["]"]).
nonterminal(fidnest,[","],[")"]).
nonterminal(expr2,["==","!=","<",">","<=",">="],[";",",",")"]).
nonterminal(fid1,[id],
	    [";","*","/","&","[","==","!=","<",">","<=",">=","+","-","|",",",")"]).
nonterminal(fparamstail,[","],[")"]).
nonterminal(funcbody,["{"],["}"]).
nonterminal(reptfuncbody,["let","if","while","read","write","return",id],["}"]).
nonterminal(funchead,["func"],[")"]).
nonterminal(fparams,[id],[")"]).
nonterminal(fid,["(","["],[")",id]).
nonterminal(funcdecl,["func"],["}"]).
nonterminal(arithexpr,[intnum,floatnum,id,"(","!","+","-"],
	    [";","}","==","!=","<",">","<=",">=",",",")"]).
nonterminal(relop,["==","!=","<",">","<=",">="],[intnum,floatnum,id,"(","!","+","-"]).
nonterminal(returntype,["void","integer","float",id],[";","}"]).
nonterminal(addop,["+","=","|"],[intnum,floatnum,id,"(","!","+","-"]).
nonterminal(rightrecarithexpr,["+","-","|"],[";","}","==","!=","<",">","<=",">=",",",")"]).
nonterminal(multop,["*","/","&"],[intnum,floatnum,id,"(","!","+","-"]).
nonterminal(sign,["+","-"],[intnum,floatnum,id,"(","!","+","-"]).
nonterminal(relexpr,[intnum,floatnum,id,"(","!","+","-"],[")"]).
nonterminal(statblock,["{","if","while","read","write","return",id],["else",";"]).
%nonterminal(statement2,[id,"("],[";"]). % removed
nonterminal(assignop,["="],[intnum,floatnum,"(","!",id,"+","-"]).
nonterminal(expr,[intnum,floatnum,"(","!",id,"+","-"],[";",",",")"]).
nonterminal(aparams,[intnum,floatnum,"(","!",id,"+","-"],[")"]).
nonterminal(optstructdecl2,["inherits"],["{"]).
nonterminal(memberdecl,["let","func"],["}"]).
nonterminal(structorimplorfunc,["struct","impl","func"],[]).
nonterminal(impldef,["impl"],[]).
nonterminal(funcdef,["func"],["}"]).
nonterminal(structdecl,["struct"],[]).
nonterminal(term,[intnum,floatnum,id,"(","!","+","-"],
	    [";","[","==","!=","<",">","<=",">=","+","-","|",",",")"]).
nonterminal(factor,[intnum,floatnum,id,"(","!","+","-"],
	    [";","*","/","&","[","==","!=","<",">","<=",">=","+","-","|",",",")"]).
nonterminal(rightrecterm,["*","/","&"],
	    [";","[","==","!=","<",">","<=",">=","+","-","|",",",")"]).
nonterminal(type,["integer","float","id"],[";","{","["]).
nonterminal(arraysize,["["],[")",",",";"]).
nonterminal(vardecl,["let"],["}"]).
nonterminal(vardeclorstat,["let","if","while","read","write","return",id],["}"]).
nonterminal(statement,["if","while","read","write","return",id],["else",";","}"]).
nonterminal(statementidnest,[".","(","[","="],[";"]).
nonterminal(statementidnest2,["."],[";"]).
nonterminal(statementidnest3,[".","="],[";"]).
nonterminal(reptidnest,["["],[".","="]).

nonterminal(variable,[id],[")"]).
nonterminal(idnest,[id],["(",id]).
nonterminal(indice,["["],
	    [";","*","/","&","[","==","!=","<",">","<=",">=","+","-","|",",",")"]).
nonterminal(visibility,["public","private"],["let","func"]).


terminal(X):-token(X,_).
